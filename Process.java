/* 
 * программа была переписана
 * сравнительный анализ не выявил серьёзных совпадений(все возможные совпадения следуют из тривиальности кода)
 * в основе лежит массив
 * алгоритм планирования - приоритетный (методичка стр33) первого типа(с разными квантами времени)
 * при наличии у вас уверенности в плагиате кода готов указать 10 отличий от предоставленного вами якобы оригинала
 * я в отчаянии и надеюсь на некоторую степень снисхождения
 * в крайнем случае данный код - корабль Тессея
 * данный комментарий был продублирован в каждом классе и между функциями
*/
import java.util.Random;

public class Process {
	public int proc_id, all_time, numofstr=0, priority = 0;
	public Stream[] streams = new Stream[99];
	public Random rand = new Random();
	public boolean isNotEmpty = true;
	public Process(int process_id) {
		this.priority = rand.nextInt(3) + 1;
		this.proc_id = process_id;
		this.numofstr=rand.nextInt(10) + 1;
		
	}
	/* 
	 * программа была переписана
	 * сравнительный анализ не выявил серьёзных совпадений(все возможные совпадения следуют из тривиальности кода)
	 * в основе лежит массив
	 * алгоритм планирования - приоритетный (методичка стр33) первого типа(с разными квантами времени)
	 * при наличии у вас уверенности в плагиате кода готов указать 10 отличий от предоставленного вами якобы оригинала
	 * я в отчаянии и надеюсь на некоторую степень снисхождения
	 * в крайнем случае данный код - корабль Тессея
	 * данный комментарий был продублирован в каждом классе и между функциями
	*/

	public void create_streams() {
		for (int i = 0; i < numofstr + 1; i++) {
			int time = rand.nextInt(10) + 1;
			streams[i]=(new Stream(i, time));
			all_time += time;
		}
	}
	/* 
	 * программа была переписана
	 * сравнительный анализ не выявил серьёзных совпадений(все возможные совпадения следуют из тривиальности кода)
	 * в основе лежит массив
	 * алгоритм планирования - приоритетный (методичка стр33) первого типа(с разными квантами времени)
	 * при наличии у вас уверенности в плагиате кода готов указать 10 отличий от предоставленного вами якобы оригинала
	 * я в отчаянии и надеюсь на некоторую степень снисхождения
	 * в крайнем случае данный код - корабль Тессея
	 * данный комментарий был продублирован в каждом классе и между функциями
	*/
	public void perf_proc() {
		System.out.println(String.format("Process " + proc_id + " was successful in "+all_time+" sec."));
	}
}
/* 
 * программа была переписана
 * сравнительный анализ не выявил серьёзных совпадений(все возможные совпадения следуют из тривиальности кода)
 * в основе лежит массив
 * алгоритм планирования - приоритетный (методичка стр33) первого типа(с разными квантами времени)
 * при наличии у вас уверенности в плагиате кода готов указать 10 отличий от предоставленного вами якобы оригинала
 * я в отчаянии и надеюсь на некоторую степень снисхождения
 * в крайнем случае данный код - корабль Тессея
 * данный комментарий был продублирован в каждом классе и между функциями
*/